name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write  # Required for npm provenance

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      # Determine if this is a pre-release
      - name: Check if pre-release
        id: prerelease
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          if [[ "$TAG_NAME" =~ -(beta|rc)\. ]]; then
            echo "IS_PRERELEASE=true" >> $GITHUB_OUTPUT
            echo "NPM_TAG=beta" >> $GITHUB_OUTPUT
            echo "This is a pre-release: $TAG_NAME"
          else
            echo "IS_PRERELEASE=false" >> $GITHUB_OUTPUT
            echo "NPM_TAG=latest" >> $GITHUB_OUTPUT
            echo "This is a stable release: $TAG_NAME"
          fi

      - name: Install dependencies
        run: npm ci

      - name: Run quality checks
        run: |
          echo "🔍 Running TypeScript type check..."
          npm run typecheck

          echo "🔨 Building project..."
          npm run build

          echo "🧪 Running test suite..."
          npm run test:all

          echo "🧪 Running smoke tests..."
          npm run test:smoke

      - name: Test package
        run: |
          echo "📦 Creating package tarball..."
          npm pack

          echo "📋 Inspecting package contents..."
          tar -tzf *.tgz | head -30

          echo "📊 Package size:"
          ls -lh *.tgz

      # Publish with appropriate tag
      - name: Publish to npm
        run: npm publish --provenance --access public --tag ${{ steps.prerelease.outputs.NPM_TAG }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      # Create GitHub Release (mark as pre-release if beta/rc)
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          draft: false
          prerelease: ${{ steps.prerelease.outputs.IS_PRERELEASE == 'true' }}
          files: |
            *.tgz
            CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify success
        run: |
          echo "✅ Successfully released version ${{ steps.version.outputs.VERSION }}"
          echo "📦 npm: https://www.npmjs.com/package/@defai.digital/automatosx/v/${{ steps.version.outputs.VERSION }}"
          echo "🏷️  npm tag: ${{ steps.prerelease.outputs.NPM_TAG }}"
          echo "🔗 GitHub: https://github.com/defai-digital/automatosx/releases/tag/v${{ steps.version.outputs.VERSION }}"
